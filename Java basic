Java basic




===================================================================
integer to String

best:
int number = -782;
String numberAsString = "" + number;


1.
int number = -782;
String numberAsString = Integer.toString(number);

2.
int number = -782;
String numberAsString = String.valueOf(number);

or

String numberAsString = new Integer(-782).toString();

3. DeciamlFormat
int number = 12345;
DecimalFormat decimalFormat = new DecimalFormat("#");
String numberAsString = decimalFormat.format(number);
System.out.println(numberAsString);






===================================================================================

Loop

Array list; 

for (Integer num : list) {
  System.out.print(num);
}

list.size();
list.add();
list.get(i);


===================================================================================
String Builder

StringBuilder sb = new StringBuilder(); // StringBuilder sb = new StringBuilder(Str_name);

sb.append(temp);
Sb.prepend(temp);
sb.reverse();
sb.setLength(0);
sb.toString();



===================================================================================
Stack 

Stack<String> stack = new Stack<>();

stack.push();
stack.pop();
stack.empty();

functions:

int search(Object element)
Searches for element in the stack. If found, its offset from the top of the stack is returned. Otherwise, -1 is returned.


===================================================================================
Map

Map map = new HashMap(); 
map.put("key1", "value1");
map.put("key2", "value2");

functions:


void clear( )
Removes all key/value pairs from the invoking map.
	
boolean containsKey(Object k)
Returns true if the invoking map contains k as a key. Otherwise, returns false.
	
boolean containsValue(Object v)
Returns true if the map contains v as a value. Otherwise, returns false.
	
Set entrySet( )
Returns a Set that contains the entries in the map. The set contains objects of type Map.Entry. This method provides a set-view of the invoking map.
	
boolean equals(Object obj)
Returns true if obj is a Map and contains the same entries. Otherwise, returns false.
	
Object get(Object k)
Returns the value associated with the key k.


int hashCode( )
Returns the hash code for the invoking map.

	
boolean isEmpty( )
Returns true if the invoking map is empty. Otherwise, returns false.

	
Set keySet( )
Returns a Set that contains the keys in the invoking map. This method provides a set-view of the keys in the invoking map.

	
Object put(Object k, Object v)

Puts an entry in the invoking map, overwriting any previous value associated with the key. The key and value are k and v, respectively. Returns null if the key did not already exist. Otherwise, the previous value linked to the key is returned.

void putAll(Map m)
Puts all the entries from m into this map.

	
Object remove(Object k)
Removes the entry whose key equals k.

	
int size( )
Returns the number of key/value pairs in the map.

	
Collection values( )
Returns a collection containing the values in the map. This method provides a collection-view of the values in the map.

================================================================================

int theIndex = string.indexOf(subString);


